"""
하나의 양팔 저울을 이용하여 물건의 무게를 측정하려고 한다. 이 저울의 양 팔의 끝에는 물건이나 추를 올려놓는 접시가 달려 있고, 양팔의 길이는 같다. 

또한, 저울의 한쪽에는 저울추들만 놓을 수 있고, 다른 쪽에는 무게를 측정하려는 물건만 올려놓을 수 있다.

무게가 양의 정수인 N개의 저울추가 주어질 때, 이 추들을 사용하여 측정할 수 없는 양의 정수 무게 중 최솟값을 구하는 프로그램을 작성하시오.

예를 들어, 무게가 각각 3, 1, 6, 2, 7, 30, 1인 7개의 저울추가 주어졌을 때, 이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값은 21이다. 
"""

"""
첫 째 줄에는 저울추의 개수를 나타내는 양의 정수 N이 주어진다. N은 1 이상 1,000 이하이다. 둘째 줄에는 저울추의 무게를 나타내는 N개의 양의 정수가 빈칸을 사이에 두고 주어진다. 

각 추의 무게는 1이상 1,000,000 이하이다.
"""


num = int(input())
weights = list(map(int, input().split()))

# 저울 추 오름차순 정렬
weights.sort()

# 오름차순 첫번째 인덱스에 1이 없을 때 1 출력
if weights[0] != 1:
    print('1')

# 오른차순 첫번째 인덱스가 1일 때는 로직 동작
else:
    # 누적합 계산
    cumulative_sum = 0
    for i in range(len(weights)):
        # 누적합 더하기
        cumulative_sum += weights[i]

        # 밑에서 i+1을 인덱스로 계산하기 때문에 i가 len(weights)까지 찼을 때는 답 출력하고 탈출
        if i == len(weights) - 1 :
            print(cumulative_sum+1)
            break

        # i까지의 인덱스 누적합이 i+1의 인덱스 값보다 2이상 적으면 누적합+1이 정답이 됨!
        if cumulative_sum + 1 < weights[i+1]:
            print(cumulative_sum+1)
            break

"""
풀이 접근 방법

가지고 있는 추를 무게순으로 오름차순한다
첫번째 인덱스에 1이 없으면 1을 잴 수 없으므로 1을 출력한다.

그게 아니라면
오름차순 추의 0~i번째 인덱스까지의 합이 오름차순 추 i+1의 단일 값보다 2이상 작으면 구멍이 생기게 된다!
ex) [1, 1, 2, 6] 일 때 1+1+2 = 4이고 그 다음 추가 6이기때문에 5는 절대로 잴 수가 없다!  
"""